- 오늘의 내용
[학습 내용]
==========================
(1) 리뷰(파이썬 라이브러리)
(2) 데이터 분석 사례 리서치
    - 지난 대회 우수작 리서치 및 정리
(3) 팀별 프로젝트 수행
	- 팀별 확인 20-30분
	- 개별 질의 40-50분
	
(4) 과제 체크 및 제출 ( tkinter 제출, 영화 10page 제출, folium 제출, konlpy) - 수요일
06/14 tkinter 제출
06/17 영화 10page 제출
06/29 folium 제출
06/30 konlpy 제출

- 오늘의 목표
지난 대회 수상작 분석하기

> 20년 대회 수상작 [ 우수상(신한카드) ]: 문화.여가 생활 분석을 통한 COVID-19 대처방안 제시
http://www.tourbigdata.kr/down/2020/2.%20%EB%8C%80%ED%95%99%20%EB%B0%8F%20%EB%8C%80%ED%95%99%EC%9B%90%EC%83%9D/8.%20%EC%9A%B0%EC%88%98%EC%83%81(%EC%8B%A0%ED%95%9C)_%ED%95%99%EC%83%9D.pdf

covid-19가 막 유행하기 시작할때의 자료.

1. 개요
코로나로 인한 여가활동 수요의 변화는?
20년 후반기 여가활동동향은 예측 가능한가?
거리두기는 잘 지키고있는가?
여가활동 측면에서 거리두기 정책에 개선점?

2. 데이터
선정 데이터 : 
(1). 여가활동 업종별 이용건수 (거주지, 카드가맹지, 가맹점 업종, 성별, 연령, 이용년월, 요일, 
시간대, 취급액, 이용건수)
(2). 대한민국 코로나 누적확진자 수(일별, 월별 확진자 수, 여가활동 이용자와 비교)
(3). 시설별 위험도 평가 결과 

데이터 전처리 :
데이터 불러오고 > 가설검정으로 분석 > 위험군에 따라 소분류로 묶어줌 > 예측모델 설계 > 추가분석
Data예측 Model

3. 분석
- 시계열 분석 : Deseasonalized Regression : 월별 Seasonal Factor 소거한 계절성 제거된 데이터로 선형 계획법 사용. 각 업종별 예측별로 정확도 측정 (100-MAPE)%
계절 요소 : 월별 평균값 / 전체 평균
> 평균과 분산이 연마다 일정한 데이터(스키, 자전거)에 적합. 

- Holt-Winters : 덧셈기법과 곱셈기법중 정확도가 높은 것 표시
> (덧셈기법) 다른 모델에 비해 예측률이 떨어짐
> (곱셈기법) 규모가 작고 시계열에 비례하여 변동폭이 줄어드는 데이터에 적합

- Arima : d결정, p결정, q결정
> 최근의 경향성을 두드러지게 따라가는 데이터에 적합

- Prophet : g(t), S(t), H(t), Error
> 분야에 상관없이 코로나의 영향을 잘 잡아냄

- 앙상블 모델 : Deseasonalize, Holt Winters - Additive, Holt Winters - Multiplicative, Arima, Prophet


4. 추가 분석
- 거리두기 실효성 분석
계층별 분석 : Hierarchical clustering
1. 코로나 영향 여부 /  2. 20년 트랜드 대비 실제값  /  3. 소분류별  /  4. 월별
클러스터링 분류 : Red, Green, purple, yellow, blue
> 고위험군/중위험군을 묶고 저위험군과 대조
> 고/중위험군에서 거리두기 수행률이 높을수록 저위험군보다 확진자 수가 더 많이 감소함
> 정부가 정해놓은 위험도 분류와 사회적 거리두기 정책은 충분히 실효성이 있다고 평가

5. 결론


- 좋았던 점, 배울점
여러 분석방법을 이용하고 그것을 시각화하고 분석하면서 최적의 분석법을 이끌어내는 과정이 인상깊었습니다.
업종을 위험도 별로 나뉘어서 계층별 분석을 통해 업종의 위험도별로 확진자 수와 어떤 상관관계가 있는지 논리적으로 설명한게 좋았고, 이런 분석결과를 바탕으로 실제 국가가 시행중인 거리두기의 실효성을 적절하다고 평가한게 인상깊었습니다.
분석과 결론까지 모든 측면에서 구체적으로 진행한 것이 정말 대단하다고 느꼈습니다.

- 좀 더 개선시키면 좋을 점
솔직히 내용적인 측면에서도 너무 어려워 이해하기 힘든 입장에서 개선시킬점을 찾기는 힘들 것 같습니다.


네이버 클로버, 네이버 라인, 카카오
자율주행 자동차 <-> 딥러닝

어설프게 ㄴㄴ

대학원 

연구실에 필요한 공부

캐글을 하고싶은데 진로도 신경써야할거같다.


취업이나 대학원도 고민이다.

---------------------------
팀 프로젝트
---------------------------

- 데이터 소개
	- 데이터 선정 목적을 넣음.

- 데이터 분석 과정
	데이터 전처리 과정
	데이터 처리를 통해 얻어진 결론
	데이터 처리를 통해 얻어진 결론과 이를 통한 제안
		데이터 컬럼 별 분석을 한 목적과 결론

- 데이터 분석 결과
	데이터 분석 결과를 통해 확인된 내용(문제점)을 토대로

- 결론 및 제언



========================
초중급 스터디 
========================
< Simple Matplotlib & Visualization Tips >

목차
1. 세팅
  - dpi (dots per inch) : 해상도를 설정함. 기본적으로 낮은 해상도가 세팅되어있음.
  - figsize : 그래프는 비율에 따라서 완전 다른 느낌을 준다. (계속 시도해보는게 좋음)
  - title : 폰트나 사이즈, 위치 등에 따라 더 가독성 있게 만들어준다.

2. Alignments : 정렬(subplot)
: 시각적으로나 효율적으로나 하나의 그래프보단 두개 이상의 그래프가 더 좋다.
그리고 사각으로 배치하는게 제일 쉽다.
  - subplots, tight_layout
plt.tight_layout() : 그래프 배치를 깔끔하게 만들어줌

  - subplot2grid : bar 그래프나 pie 차트같은 경우처럼, plot의 비율이 달라야할 경우에 사용.
  - add_axes : x축, y축 위치 + 폭과 높이 설정하면 상대적인 위치에 배치
  - add_gridspec

3. Colormap
  - Diverging Colormap : 중간 값이 명확할 때 사용
  - Qualitative Colormap : 독립적인 색을 가지는 colormap. 카테고리 변수들에 자주쓰임.
  - Sequential Colormap : 정렬된 수치형 데이터에 적합.
  - Scientific Colormap : 왠지 모르겠지만 과학분야의 시각화에 많이 쓰임. plotly의 기본 colormap.

4. Text & Annotate & Patch
  - parameter
  - text example
  - patches example

5. Details & Example
  - font weight, color, size, etc
  - Horizontal and Vertical (barplot)
  - Border(edge) color and thickness
  - Main Color & Sub Color
  - Transparency
  - Span

6. MEME
  - xkcd style











